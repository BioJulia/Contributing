{
    "docs": [
        {
            "location": "/", 
            "text": "Contributing\n\n\n\n\nWelcome!\n\n\nThis documentation lays out the guidelines and some tutorials for Biologists, Bioinformaticians, and Computational Biologists, who want to contribute to the BioJulia community.\n\n\nThis documentation is split into two broad categories.\n\n\nThe first section, called \"How do I...?\" contains a set of simple walkthrough style guides for contributing in different ways.\n\n\nThe second section, called \"Policies and Guidelines\". This section contains the agreed on policies that members, maintainers, and administrators are expected to adhere to.  \n\n\nBioJulia welcomes contributions in several forms including through Github Pull Requests, through opening Github Issues, and through package submissions. BioJulia welcomes contributions of all kinds to the community, this includes but is not limited to code contributions.\n\n\nTake a look through the articles in the \"How do I...?\" section to get started.\n\n\n\n\nOur community code of conduct\n\n\nWe have a policy of being as open and inclusive as possible at all times, and we are always happy for people to contribute and join in the community. We welcome (and strive to be inclusive of) all people, of all backgrounds. To help us all achieve this we have a \ncode of conduct\n that all members and visitors are expected to follow, please read this.", 
            "title": "Home"
        }, 
        {
            "location": "/#contributing", 
            "text": "", 
            "title": "Contributing"
        }, 
        {
            "location": "/#welcome", 
            "text": "This documentation lays out the guidelines and some tutorials for Biologists, Bioinformaticians, and Computational Biologists, who want to contribute to the BioJulia community.  This documentation is split into two broad categories.  The first section, called \"How do I...?\" contains a set of simple walkthrough style guides for contributing in different ways.  The second section, called \"Policies and Guidelines\". This section contains the agreed on policies that members, maintainers, and administrators are expected to adhere to.    BioJulia welcomes contributions in several forms including through Github Pull Requests, through opening Github Issues, and through package submissions. BioJulia welcomes contributions of all kinds to the community, this includes but is not limited to code contributions.  Take a look through the articles in the \"How do I...?\" section to get started.", 
            "title": "Welcome!"
        }, 
        {
            "location": "/#our-community-code-of-conduct", 
            "text": "We have a policy of being as open and inclusive as possible at all times, and we are always happy for people to contribute and join in the community. We welcome (and strive to be inclusive of) all people, of all backgrounds. To help us all achieve this we have a  code of conduct  that all members and visitors are expected to follow, please read this.", 
            "title": "Our community code of conduct"
        }, 
        {
            "location": "/help/package_submission/", 
            "text": "Submitting a package to BioJulia\n\n\nIf you have written a package, and would like to have it listed under - and endorsed by - the BioJulia organization, you're agreeing to the following:\n\n\n\n\n\n\nTake responsibility/ownership for the continued maintenance of the package.\n\n\n\n\n\n\nAllowing BioJulia to have joint ownership of the package. This is so that the members can help you review and merge pull requests and other contributions, and also help you to develop new features. This policy ensures that you (as the package author and current maintainer) will have good support in maintaining your package to the highest possible quality.\n\n\n\n\n\n\nGo through a joint review/decision on a suitable package name. This usually the original package name. However, pakcage authors may be asked to rename their package to something more official and discoverable (by search engines and such) if it is contentious or non-standard.\n\n\n\n\n\n\nTo submit your package, follow these steps:\n\n\n\n\nAnnounce your package on the BioJulia Gitter channel.\n\n\nAt this point maintainers will reach out to mentor and vouch for you and your package. They will:\n\n\nDiscuss with you a suitable name.\n\n\nHelp you ensure the the package is up to standard, and meets the code and contribution guidelines described on this site.\n\n\nAdd you to the BioJulia organisation (optional).\n\n\nTransfer ownership of the package.", 
            "title": "Contribute packages"
        }, 
        {
            "location": "/help/package_submission/#submitting-a-package-to-biojulia", 
            "text": "If you have written a package, and would like to have it listed under - and endorsed by - the BioJulia organization, you're agreeing to the following:    Take responsibility/ownership for the continued maintenance of the package.    Allowing BioJulia to have joint ownership of the package. This is so that the members can help you review and merge pull requests and other contributions, and also help you to develop new features. This policy ensures that you (as the package author and current maintainer) will have good support in maintaining your package to the highest possible quality.    Go through a joint review/decision on a suitable package name. This usually the original package name. However, pakcage authors may be asked to rename their package to something more official and discoverable (by search engines and such) if it is contentious or non-standard.    To submit your package, follow these steps:   Announce your package on the BioJulia Gitter channel.  At this point maintainers will reach out to mentor and vouch for you and your package. They will:  Discuss with you a suitable name.  Help you ensure the the package is up to standard, and meets the code and contribution guidelines described on this site.  Add you to the BioJulia organisation (optional).  Transfer ownership of the package.", 
            "title": "Submitting a package to BioJulia"
        }, 
        {
            "location": "/help/join_biojulia/", 
            "text": "Joining the BioJulia GitHub Organisation\n\n\nIf you would like to be added to the BioJulia GitHub organisation, you may ask the current owners to add you.\n\n\nThey will generally be willing to do so if you have done one or more of the following:\n\n\n\n\nYou have registered a new package under BioJulia.\n\n\nA fix of a bug.\n\n\nPerformance improvements of existing code.\n\n\nNew code and additional functionality.\n\n\nAdditional and improved unit tests of existing code.\n\n\nAdditional or improved documentation of existing code and packages.\n\n\n\n\nNone of these \"requirements\" are set in stone, but we prefer you to have done one or more of the above, as it gives good confidence that you are familiar with the process of filing-bugs/surfacing-issues/providing-documentation/reviewing-pull-requests, and are willing to do so. Any other avenue for demonstrating commitment to the community and the GitHub organisation will be considered.", 
            "title": "Join the BioJulia GitHub organisation"
        }, 
        {
            "location": "/help/join_biojulia/#joining-the-biojulia-github-organisation", 
            "text": "If you would like to be added to the BioJulia GitHub organisation, you may ask the current owners to add you.  They will generally be willing to do so if you have done one or more of the following:   You have registered a new package under BioJulia.  A fix of a bug.  Performance improvements of existing code.  New code and additional functionality.  Additional and improved unit tests of existing code.  Additional or improved documentation of existing code and packages.   None of these \"requirements\" are set in stone, but we prefer you to have done one or more of the above, as it gives good confidence that you are familiar with the process of filing-bugs/surfacing-issues/providing-documentation/reviewing-pull-requests, and are willing to do so. Any other avenue for demonstrating commitment to the community and the GitHub organisation will be considered.", 
            "title": "Joining the BioJulia GitHub Organisation"
        }, 
        {
            "location": "/policy/biojulia_organisation/", 
            "text": "Organization of the BioJulia community.\n\n\nIn order to provide the best possible experience for new and existing users of Julia from the life-sciences. A little bit of structure and organization is necessary.\n\n\n\n\nThe package ecosystem and Maintainers.\n\n\nThe BioJulia software ecosystem, around which the BioJulia community is based, consists of a growing number of individual packages.\n\n\nEach package is dedicated to introducing a specific data type or algorithm, or dealing with a specific biological problem or pipeline.\n\n\nWhilst there are some \"meta-packages\" such as Bio.jl, which bundle individual packages together for convenience of installation and use, most of the BioJulia software ecosystem is quite decentralized.\n\n\nTherefore, it made sense that maintainership of the packages should also be fairly decentralized, to achieve this, we created the role of a \"Dedicated Maintainer\", and have a Maintainers team.\n\n\n\n\nDedicated Maintainers\n\n\nPackages have at least one \"Dedicated Maintainer\" who has admin access to the package. Typically this will be the original author of the package, when they contribute it to BioJulia. However, popular or larger packages may have multiple such dedicated maintainers. Dedicated maintainers may be recruited through on-boarding, and may leave their position through voluntarily \noff-boarding\n.\n\n\nDedicated maintainers are listed on their project's README file, and\n\n\nThe dedicated maintainer(s) will be responsible for the following for their package:\n\n\n\n\nDeciding the branching model used and how branches are protected.\n\n\nReviewing pull requests, and issues for that package.\n\n\nTo tag releases of a package at suitable points in the lifetime of the package.\n\n\nTo be the first contact for new contributors, community members and    maintainers.\n\n\nTo uphold the \nBioJulia code of conduct\n, and report any    incidents to a BioJulia \nadmin\n member.\n\n\n\n\nDedicated maintainers hold admin level access for any package(s) for which they are listed as a dedicated maintainer, and so new contributors to BioJulia should rest assured they will not be 'giving up' any package they decide to contribute, they shall remain that package's administrator.   \n\n\n\n\nThe Maintainers Team\n\n\nAll dedicated maintainers are added the the Maintainers team.\n\n\nWhilst, dedicated maintainers have admin access to specific packages, all maintainers in the Maintainers team have push access to all code packages in the BioJulia ecosystem.\n\n\nThis allows for a community spirit where maintainers who are dedicated primarily to other packages may step in to help other maintainers to resolve a PR or issue. As such newer maintainers and researchers contributing a package to the BioJulia ecosystem can rest assured help will always be at hand from our community.\n\n\nHowever, if you are a maintainer stepping in to help the dedicated maintainer(s) of another package, please respect them by first offering to step in and help resolve something, and secondly, by asking the Dedicated Maintainer before doing advanced and potentially destructive git operations e.g forcing pushes to branches (especially master), or re-writing history of branches.\n\n\n\n\nAdministrators\n\n\nBioJulia has a select group of members in an Admin team. This team has administrative access to all repositories in the BioJulia project.\n\n\nThe administrators are expected to:\n\n\n\n\nUphold the \nBioJulia code of conduct\n\n\nRespond to conduct breaches by enacting appropriate \nincident response\n.\n\n\nAct as mentors to all other BioJulia maintainers.\n\n\nAssist maintainers in upkeep of software packages when requested. Typically    when harder tasks such as re-bases and history manipulation may be required.\n\n\nMaintain BioJulia infrastructure.\n\n\n\n\nSuch members have often been contributing to BioJulia for a long time, and may even be founders present at the inception of the project. In order to become an admin, one does not necessarily have to contribute large amounts of code to the project. Rather the decision to on-board a member to an admin position depends on how long they have been using and contributing to BioJulia, their positive interaction with the community,", 
            "title": "Community Organisation"
        }, 
        {
            "location": "/policy/biojulia_organisation/#organization-of-the-biojulia-community", 
            "text": "In order to provide the best possible experience for new and existing users of Julia from the life-sciences. A little bit of structure and organization is necessary.", 
            "title": "Organization of the BioJulia community."
        }, 
        {
            "location": "/policy/biojulia_organisation/#the-package-ecosystem-and-maintainers", 
            "text": "The BioJulia software ecosystem, around which the BioJulia community is based, consists of a growing number of individual packages.  Each package is dedicated to introducing a specific data type or algorithm, or dealing with a specific biological problem or pipeline.  Whilst there are some \"meta-packages\" such as Bio.jl, which bundle individual packages together for convenience of installation and use, most of the BioJulia software ecosystem is quite decentralized.  Therefore, it made sense that maintainership of the packages should also be fairly decentralized, to achieve this, we created the role of a \"Dedicated Maintainer\", and have a Maintainers team.", 
            "title": "The package ecosystem and Maintainers."
        }, 
        {
            "location": "/policy/biojulia_organisation/#dedicated-maintainers", 
            "text": "Packages have at least one \"Dedicated Maintainer\" who has admin access to the package. Typically this will be the original author of the package, when they contribute it to BioJulia. However, popular or larger packages may have multiple such dedicated maintainers. Dedicated maintainers may be recruited through on-boarding, and may leave their position through voluntarily  off-boarding .  Dedicated maintainers are listed on their project's README file, and  The dedicated maintainer(s) will be responsible for the following for their package:   Deciding the branching model used and how branches are protected.  Reviewing pull requests, and issues for that package.  To tag releases of a package at suitable points in the lifetime of the package.  To be the first contact for new contributors, community members and    maintainers.  To uphold the  BioJulia code of conduct , and report any    incidents to a BioJulia  admin  member.   Dedicated maintainers hold admin level access for any package(s) for which they are listed as a dedicated maintainer, and so new contributors to BioJulia should rest assured they will not be 'giving up' any package they decide to contribute, they shall remain that package's administrator.", 
            "title": "Dedicated Maintainers"
        }, 
        {
            "location": "/policy/biojulia_organisation/#the-maintainers-team", 
            "text": "All dedicated maintainers are added the the Maintainers team.  Whilst, dedicated maintainers have admin access to specific packages, all maintainers in the Maintainers team have push access to all code packages in the BioJulia ecosystem.  This allows for a community spirit where maintainers who are dedicated primarily to other packages may step in to help other maintainers to resolve a PR or issue. As such newer maintainers and researchers contributing a package to the BioJulia ecosystem can rest assured help will always be at hand from our community.  However, if you are a maintainer stepping in to help the dedicated maintainer(s) of another package, please respect them by first offering to step in and help resolve something, and secondly, by asking the Dedicated Maintainer before doing advanced and potentially destructive git operations e.g forcing pushes to branches (especially master), or re-writing history of branches.", 
            "title": "The Maintainers Team"
        }, 
        {
            "location": "/policy/biojulia_organisation/#administrators", 
            "text": "BioJulia has a select group of members in an Admin team. This team has administrative access to all repositories in the BioJulia project.  The administrators are expected to:   Uphold the  BioJulia code of conduct  Respond to conduct breaches by enacting appropriate  incident response .  Act as mentors to all other BioJulia maintainers.  Assist maintainers in upkeep of software packages when requested. Typically    when harder tasks such as re-bases and history manipulation may be required.  Maintain BioJulia infrastructure.   Such members have often been contributing to BioJulia for a long time, and may even be founders present at the inception of the project. In order to become an admin, one does not necessarily have to contribute large amounts of code to the project. Rather the decision to on-board a member to an admin position depends on how long they have been using and contributing to BioJulia, their positive interaction with the community,", 
            "title": "Administrators"
        }, 
        {
            "location": "/policy/contributor_covenant/", 
            "text": "The BioJulia code of conduct\n\n\nLike other software projects and communities, we have chosen to adopt the Contributor Covenant's code of conduct as a starting point.\n\n\nThe version of the contributor covenant we adhere to is provided below.\n\n\n\n\nContributor Covenant Code of Conduct\n\n\n\n\nOur Pledge\n\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n\n\n\nOur Standards\n\n\nExamples of behavior that contributes to creating a positive environment include:\n\n\n\n\nUsing welcoming and inclusive language\n\n\nBeing respectful of differing viewpoints and experiences\n\n\nGracefully accepting constructive criticism\n\n\nFocusing on what is best for the community\n\n\nShowing empathy towards other community members\n\n\n\n\nExamples of unacceptable behavior by participants include:\n\n\n\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\n\n\nTrolling, insulting/derogatory comments, and personal or political attacks\n\n\nPublic or private harassment\n\n\nPublishing others' private information, such as a physical or electronic   address, without explicit permission\n\n\nOther conduct which could reasonably be considered inappropriate in a   professional setting\n\n\n\n\n\n\nOur Responsibilities\n\n\nBioJulia maintainers and administrators are responsible for clarifying the standards of acceptable behavior, and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\n\nBioJulia administrators have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\nPlease refer to the \nIncident Response Procedure\n that administrators are expected to adhere to, to see how incidents will be handled.\n\n\n\n\nScope\n\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n\n\n\nEnforcement\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the dedicated maintainer of a BioJulia package. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n\n\n\nAttribution\n\n\nThis Code of Conduct is adapted from the \nContributor Covenant\n, version 1.4, available \nhere", 
            "title": "Code of conduct"
        }, 
        {
            "location": "/policy/contributor_covenant/#the-biojulia-code-of-conduct", 
            "text": "Like other software projects and communities, we have chosen to adopt the Contributor Covenant's code of conduct as a starting point.  The version of the contributor covenant we adhere to is provided below.", 
            "title": "The BioJulia code of conduct"
        }, 
        {
            "location": "/policy/contributor_covenant/#contributor-covenant-code-of-conduct", 
            "text": "", 
            "title": "Contributor Covenant Code of Conduct"
        }, 
        {
            "location": "/policy/contributor_covenant/#our-pledge", 
            "text": "In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.", 
            "title": "Our Pledge"
        }, 
        {
            "location": "/policy/contributor_covenant/#our-standards", 
            "text": "Examples of behavior that contributes to creating a positive environment include:   Using welcoming and inclusive language  Being respectful of differing viewpoints and experiences  Gracefully accepting constructive criticism  Focusing on what is best for the community  Showing empathy towards other community members   Examples of unacceptable behavior by participants include:   The use of sexualized language or imagery and unwelcome sexual attention or advances  Trolling, insulting/derogatory comments, and personal or political attacks  Public or private harassment  Publishing others' private information, such as a physical or electronic   address, without explicit permission  Other conduct which could reasonably be considered inappropriate in a   professional setting", 
            "title": "Our Standards"
        }, 
        {
            "location": "/policy/contributor_covenant/#our-responsibilities", 
            "text": "BioJulia maintainers and administrators are responsible for clarifying the standards of acceptable behavior, and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.  BioJulia administrators have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.  Please refer to the  Incident Response Procedure  that administrators are expected to adhere to, to see how incidents will be handled.", 
            "title": "Our Responsibilities"
        }, 
        {
            "location": "/policy/contributor_covenant/#scope", 
            "text": "This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.", 
            "title": "Scope"
        }, 
        {
            "location": "/policy/contributor_covenant/#enforcement", 
            "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the dedicated maintainer of a BioJulia package. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.  Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.", 
            "title": "Enforcement"
        }, 
        {
            "location": "/policy/contributor_covenant/#attribution", 
            "text": "This Code of Conduct is adapted from the  Contributor Covenant , version 1.4, available  here", 
            "title": "Attribution"
        }, 
        {
            "location": "/policy/incident_response/", 
            "text": "Incident Response\n\n\nIf a member, or maintainer, of BioJulia breaks the code of conduct, and you are the target of harassing or otherwise bad behaviour, you may immediately report the incident to one of the admin maintainers of BioJulia.\n\n\nWhen making a report to admin, you should be as descriptive as possible, and be as objective as possible to help the admin responsibly handle the incident. Be accurate in your report as to the actual events, if possible, collect screen shots and other lines of evidence which cannot be denied.\n\n\n\n\nExample report\n\n\n\n\nReported by: Mike\n\n\nWho: Chris G (@creepius, creepius@hotmail.com)\n\n\nWhen: October 2015\n\n\nWhat Happened: Chris made an inappropriate comment and made \nad hominem\n insults to other member's intelligence during what was previously a technical discussion.\n\n\nAdditional Context: NA\n\n\nOngoing: No\n\n\n\n\nThe admin members must make an email address available to the BioJulia community members, through which they can be contacted. Report the incident to the admin members. They will keep a a copy of your report confidential.\n\n\n\n\nResponding to reports\n\n\nWhen responding to a report, an admin will:\n\n\n\n\nState they have recieved a report of a code of conduct issue.\n\n\nState when and where it happened.\n\n\nGive a general description of what happened (\nThe name of the reporter must not be revealed\n).\n\n\nState the consequences.\n\n\nState what is expected of the person now.\n\n\n\n\nWhen responding to reports, admins pledge to:\n\n\n\n\nFocus on recording the details, and not on their individual judgement.\n\n\nRecord what they're hearing from the people affected.\n\n\nRecord it.\n\n\nAssume reports are credible.\n\n\n\n\n\n\nJudging the risk and impact of incidents\n\n\nWhen deciding on the severity of a report, an admin must consider:\n\n\n\n\nHow many people are affected?\n\n\nWas this in public or private?\n\n\nAre there any spill over effects.\n\n\n\n\nWhen deciding the risk associated with a report, and admin must consider:\n\n\n\n\nMedical or legal requirements.\n\n\nRepeat offenders.\n\n\nHow dangerous is it for the incident to happen again.\n\n\n\n\nThe following example table can be used to asses the risk and impact of incidents:\n\n\n\n\n\n\n\n\nImpact\n\n\nLow Risk\n\n\nHigh Risk\n\n\n\n\n\n\n\n\n\n\nLow Impact\n\n\nInappropriate jokes made in private\n\n\nMember has previous reputation for online harassment\n\n\n\n\n\n\nHigh Impact\n\n\nConstant inappropriate jokes\n\n\nPersistent co-ordinated harassment\n\n\n\n\n\n\n\n\n\n\nDetermining the response to an incident.\n\n\nAdmins may use the following example table to help them decide on the appropriate action to take following an incident report.\n\n\n\n\n\n\n\n\nImpact\n\n\nLow Risk\n\n\nHigh Risk\n\n\n\n\n\n\n\n\n\n\nLow Impact\n\n\nVerbal warning\n\n\nTake notes and follow up later\n\n\n\n\n\n\nHigh Impact\n\n\nPublic apology\n\n\nCo-Ordinated whole team response: Removal of member from pages and positions of responsibility. Possible block from group entirely.\n\n\n\n\n\n\n\n\nIf a member with a degree of responsibility and administrative privileges is the offender, they may be \noff-boarded\n without the required notification period. This is to prevent the offending individual from abusing their position and retaliating against anyone they think made a report.\n\n\n\n\nFollowing up after acting on an incident\n\n\nFollowing an incident, after the admin has issued appropriate action, they must follow up with the individual(s) that made the report. This means letting the affected individual that made the report know the following:\n\n\n\n\nWas a code of conduct breach found.\n\n\nWhat was the response of the admin (e.g. reprimand, or more severe consequence.)\n\n\nAnything further that needs to be discussed.", 
            "title": "Incident Response"
        }, 
        {
            "location": "/policy/incident_response/#incident-response", 
            "text": "If a member, or maintainer, of BioJulia breaks the code of conduct, and you are the target of harassing or otherwise bad behaviour, you may immediately report the incident to one of the admin maintainers of BioJulia.  When making a report to admin, you should be as descriptive as possible, and be as objective as possible to help the admin responsibly handle the incident. Be accurate in your report as to the actual events, if possible, collect screen shots and other lines of evidence which cannot be denied.", 
            "title": "Incident Response"
        }, 
        {
            "location": "/policy/incident_response/#example-report", 
            "text": "Reported by: Mike  Who: Chris G (@creepius, creepius@hotmail.com)  When: October 2015  What Happened: Chris made an inappropriate comment and made  ad hominem  insults to other member's intelligence during what was previously a technical discussion.  Additional Context: NA  Ongoing: No   The admin members must make an email address available to the BioJulia community members, through which they can be contacted. Report the incident to the admin members. They will keep a a copy of your report confidential.", 
            "title": "Example report"
        }, 
        {
            "location": "/policy/incident_response/#responding-to-reports", 
            "text": "When responding to a report, an admin will:   State they have recieved a report of a code of conduct issue.  State when and where it happened.  Give a general description of what happened ( The name of the reporter must not be revealed ).  State the consequences.  State what is expected of the person now.   When responding to reports, admins pledge to:   Focus on recording the details, and not on their individual judgement.  Record what they're hearing from the people affected.  Record it.  Assume reports are credible.", 
            "title": "Responding to reports"
        }, 
        {
            "location": "/policy/incident_response/#judging-the-risk-and-impact-of-incidents", 
            "text": "When deciding on the severity of a report, an admin must consider:   How many people are affected?  Was this in public or private?  Are there any spill over effects.   When deciding the risk associated with a report, and admin must consider:   Medical or legal requirements.  Repeat offenders.  How dangerous is it for the incident to happen again.   The following example table can be used to asses the risk and impact of incidents:     Impact  Low Risk  High Risk      Low Impact  Inappropriate jokes made in private  Member has previous reputation for online harassment    High Impact  Constant inappropriate jokes  Persistent co-ordinated harassment", 
            "title": "Judging the risk and impact of incidents"
        }, 
        {
            "location": "/policy/incident_response/#determining-the-response-to-an-incident", 
            "text": "Admins may use the following example table to help them decide on the appropriate action to take following an incident report.     Impact  Low Risk  High Risk      Low Impact  Verbal warning  Take notes and follow up later    High Impact  Public apology  Co-Ordinated whole team response: Removal of member from pages and positions of responsibility. Possible block from group entirely.     If a member with a degree of responsibility and administrative privileges is the offender, they may be  off-boarded  without the required notification period. This is to prevent the offending individual from abusing their position and retaliating against anyone they think made a report.", 
            "title": "Determining the response to an incident."
        }, 
        {
            "location": "/policy/incident_response/#following-up-after-acting-on-an-incident", 
            "text": "Following an incident, after the admin has issued appropriate action, they must follow up with the individual(s) that made the report. This means letting the affected individual that made the report know the following:   Was a code of conduct breach found.  What was the response of the admin (e.g. reprimand, or more severe consequence.)  Anything further that needs to be discussed.", 
            "title": "Following up after acting on an incident"
        }, 
        {
            "location": "/policy/code_style/", 
            "text": "Style requirements for code\n\n\n\n\nSource code files should have the following style of header:\n\n\n\n\n  \n# Title\n\n  \n# =====\n\n  \n#\n\n  \n# Short description.\n\n  \n#\n\n  \n# [Long description (optional)]\n\n  \n#\n\n  \n# This file is a part of BioJulia. License is MIT: \nlink to the license file\n\n  \n```\n\n\n\n* Indent with 4 spaces.\n\n\n\n* When returning values from a function, use an explicit `\nreturn\n` statement. Be aware that functions in julia return the\n\n\n  the result of the last statement in the function.\n\n\n\n* Type names are camel case, with the first letter capitalized. E.g. `\nSomeVeryUsefulType\n`.\n\n\n\n* Module names are also camel case.\n\n\n\n* Function names, apart from constructors, are all lowercase.\n\n\n  Include underscores between words only if the name would be hard\n\n\n  to read without.\n\n\n  E.g.  `\nstart\n`, `\nstop\n`, `\nfindletter\n` `\nfind_last_digit\n`.\n\n\n\n* Generally try to keep lines below 80-columns, unless splitting a long line\n\n\n  onto multiple lines makes it harder to read.\n\n\n\n* Files that declare modules should only declare the module, and import any\n\n\n  modules that it requires. Any code should be included from separate files.\n\n\n  E.g.\n\n\n\n\n\n\njulia module AwesomeFeatures\n\n\nusing IntervalsTrees, JSON\n\n\ninclude(\"feature1.jl\") include(\"feature2.jl\")\n\n\nend\n\n\n* Files that declare modules should have the same name name of the module.\n  E.g the module `SomeModule` is declared under the file `SomeModule.jl`.\n\n* Separate logical blocks of code with one blank line,\n  or two blank lines for function/type definitions.\n\n* When extending method definitions, define the methods with a module name prefix. E.g.\n\n\n\n\n\njulia function Base.start(iter::YourType)   ... end\n\n\nBase.done(iter::YourType, state) = ...\n\n\n* Document functions using bare docstrings before a definition:\n\n\n\n\n\njulia \"This function foo's something\" foo(x) = 2 * x\n\n\n* Functions that get or set variables in a struct should not be\n  prefixed with \nget\n or \nset\n.\n  The getter should be named for the variable it gets, and the setter\n  should have the same name as the getter, with the suffix `!`.\n  For example, for the variable `names`:\n\n\n\n\n\njulia name(node) # get node name name!(node, \"somename\") # set node name\n\n\n* When using conditional branching, if code is statement-like, an\n  if-else block should be used. However if the code is expression-like\n  then julia\ns ternary operator should be used.\n\n\n\n\n\njulia matches == sketchlen ? (return 1.0) : return matches / (2 * sketchlen - matches)\n\n\nThe above code is more statement-like, with two return statements #and so is more readable as a if-else block:\n\n\nif matches == sketchlin     return 1.0 else     return matches / (2 * sketchlen - matches) end\n\n\nHowever,\n\n\nx == y ? '|' : ' '\n\n\nReturns one of two expression values; it is more expression-like #and so using a ternary operator is perfectly readable, and is #aceptable in BioJulia code. ```", 
            "title": "Code Style"
        }, 
        {
            "location": "/policy/code_style/#style-requirements-for-code", 
            "text": "Source code files should have the following style of header:      # Title \n   # ===== \n   # \n   # Short description. \n   # \n   # [Long description (optional)] \n   # \n   # This file is a part of BioJulia. License is MIT:  link to the license file \n   ```  * Indent with 4 spaces.  * When returning values from a function, use an explicit ` return ` statement. Be aware that functions in julia return the    the result of the last statement in the function.  * Type names are camel case, with the first letter capitalized. E.g. ` SomeVeryUsefulType `.  * Module names are also camel case.  * Function names, apart from constructors, are all lowercase.    Include underscores between words only if the name would be hard    to read without.    E.g.  ` start `, ` stop `, ` findletter ` ` find_last_digit `.  * Generally try to keep lines below 80-columns, unless splitting a long line    onto multiple lines makes it harder to read.  * Files that declare modules should only declare the module, and import any    modules that it requires. Any code should be included from separate files.    E.g.   julia module AwesomeFeatures  using IntervalsTrees, JSON  include(\"feature1.jl\") include(\"feature2.jl\")  end  * Files that declare modules should have the same name name of the module.\n  E.g the module `SomeModule` is declared under the file `SomeModule.jl`.\n\n* Separate logical blocks of code with one blank line,\n  or two blank lines for function/type definitions.\n\n* When extending method definitions, define the methods with a module name prefix. E.g.  julia function Base.start(iter::YourType)   ... end  Base.done(iter::YourType, state) = ...  * Document functions using bare docstrings before a definition:  julia \"This function foo's something\" foo(x) = 2 * x  * Functions that get or set variables in a struct should not be\n  prefixed with  get  or  set .\n  The getter should be named for the variable it gets, and the setter\n  should have the same name as the getter, with the suffix `!`.\n  For example, for the variable `names`:  julia name(node) # get node name name!(node, \"somename\") # set node name  * When using conditional branching, if code is statement-like, an\n  if-else block should be used. However if the code is expression-like\n  then julia s ternary operator should be used.  julia matches == sketchlen ? (return 1.0) : return matches / (2 * sketchlen - matches)", 
            "title": "Style requirements for code"
        }, 
        {
            "location": "/policy/code_style/#the-above-code-is-more-statement-like-with-two-return-statements-and-so-is-more-readable-as-a-if-else-block", 
            "text": "if matches == sketchlin     return 1.0 else     return matches / (2 * sketchlen - matches) end", 
            "title": "The above code is more statement-like, with two return statements #and so is more readable as a if-else block:"
        }, 
        {
            "location": "/policy/code_style/#however", 
            "text": "x == y ? '|' : ' '", 
            "title": "However,"
        }, 
        {
            "location": "/policy/code_style/#returns-one-of-two-expression-values-it-is-more-expression-like-and-so-using-a-ternary-operator-is-perfectly-readable-and-is-aceptable-in-biojulia-code", 
            "text": "", 
            "title": "Returns one of two expression values; it is more expression-like #and so using a ternary operator is perfectly readable, and is #aceptable in BioJulia code. ```"
        }, 
        {
            "location": "/policy/package_requirements/", 
            "text": "BioJulia package guidelines\n\n\nAll code in all packages in the BioJulia ecosystem should follow the BioJulia \ncode style\n guide.\n\n\n\n\nDocumentation\n\n\n\n\nDocstrings\n\n\nTypes and functions must be documented using Julia's \ndocstrings\n.\n\n\nDocumentation regarding specific implementation details that aren't relevant to users should be in the form of comments.\n\n\nDocumentation may be omitted if the function is not exported (i.e. only used internally) and is short and obvious. E.g. \ncube(x) = x^3\n.\n\n\nHowever, please consider that what may be obvious to you as the write of the code, may not be obvious to others. Therefore, we do recommend documenting as much as possible, to help out fellow julia coders and biologists when they are reading and understanding the code. We are trying to make BioJulia packages as easy as possible to use, understand, and code with for everyone :)\n\n\n\n\nDocumenter.jl generated manuals and documentation\n\n\nIn addition to documenting code in the source files through docstrings, we encourage contributers to create documentation which is more akin to a manual, complete with comprehensive explanations and examples of how to use the package.\n\n\nWe use Documenter.jl and mkdocs, to generate such documentation and host it on the web. The source markdown files for such manuals are kept in the \ndocs/src/man\n folder of each BioJulia package/repository.\n\n\n\n\nTests\n\n\nAll significant code must be tested. Tests should be organized into contexts, and into separate files based on module.\n\n\nFiles for tests for a module go into an appropriately named folder, within the \ntest\n folder in the git repo.\n\n\n\n\nVersion compatibility\n\n\nAll code contributed should be compatible with the latest stable version of Julia.\n\n\nIf your contribution to a BioJulia package introduces a method which is shared among submodules, they should be declared in the top level module, and then extended by the submodules. For example, in Bio.jl, the method \nseqname\n was defined in \nBio.Seq\n and overloaded by \nBio.Intervals\n and \nBio.Align\n. Therefore the declaration of the method was moved to \nBio\n, and the three submodules extend the declared method.", 
            "title": "Package Requirements"
        }, 
        {
            "location": "/policy/package_requirements/#biojulia-package-guidelines", 
            "text": "All code in all packages in the BioJulia ecosystem should follow the BioJulia  code style  guide.", 
            "title": "BioJulia package guidelines"
        }, 
        {
            "location": "/policy/package_requirements/#documentation", 
            "text": "", 
            "title": "Documentation"
        }, 
        {
            "location": "/policy/package_requirements/#docstrings", 
            "text": "Types and functions must be documented using Julia's  docstrings .  Documentation regarding specific implementation details that aren't relevant to users should be in the form of comments.  Documentation may be omitted if the function is not exported (i.e. only used internally) and is short and obvious. E.g.  cube(x) = x^3 .  However, please consider that what may be obvious to you as the write of the code, may not be obvious to others. Therefore, we do recommend documenting as much as possible, to help out fellow julia coders and biologists when they are reading and understanding the code. We are trying to make BioJulia packages as easy as possible to use, understand, and code with for everyone :)", 
            "title": "Docstrings"
        }, 
        {
            "location": "/policy/package_requirements/#documenterjl-generated-manuals-and-documentation", 
            "text": "In addition to documenting code in the source files through docstrings, we encourage contributers to create documentation which is more akin to a manual, complete with comprehensive explanations and examples of how to use the package.  We use Documenter.jl and mkdocs, to generate such documentation and host it on the web. The source markdown files for such manuals are kept in the  docs/src/man  folder of each BioJulia package/repository.", 
            "title": "Documenter.jl generated manuals and documentation"
        }, 
        {
            "location": "/policy/package_requirements/#tests", 
            "text": "All significant code must be tested. Tests should be organized into contexts, and into separate files based on module.  Files for tests for a module go into an appropriately named folder, within the  test  folder in the git repo.", 
            "title": "Tests"
        }, 
        {
            "location": "/policy/package_requirements/#version-compatibility", 
            "text": "All code contributed should be compatible with the latest stable version of Julia.  If your contribution to a BioJulia package introduces a method which is shared among submodules, they should be declared in the top level module, and then extended by the submodules. For example, in Bio.jl, the method  seqname  was defined in  Bio.Seq  and overloaded by  Bio.Intervals  and  Bio.Align . Therefore the declaration of the method was moved to  Bio , and the three submodules extend the declared method.", 
            "title": "Version compatibility"
        }, 
        {
            "location": "/policy/pull_requests/", 
            "text": "Contribute by pull requests\n\n\nConributions of code and documentation to existing BioJulia repositories take the form of pull requests (PR's).\n\n\nBefore you start to work on your fix or addition to a BioJulia repository we recommend that you make your pull request early. This allows better collaboration with others, exchange of ideas, more code contributions from others (taking the pressure off you!), and better overall code as a result.\n\n\nThe first thing all developers should do when making a PR is create themselves a fork of the BioJulia repository they want to contribute to, and then create a branch on that fork for the PR. This keeps the number of branches on the BioJulia repositories manageable and limited to release branches, and branches for major milestones involving work from many contributors. All developers, even those with push and pull access to BioJulia repositories, should follow this guidance.\n\n\n\n\nThe BioJulia Pull Request lifecycle\n\n\nPull Requests on BioJulia repositories go through several stages, and these stages are indicated by the following labels. Please use these labels to help let others know how far your are along with your work.\n\n\n\n\nstage: planing\n:   You're planning. Figuring out the best way to code something or discussing ideas.\n\n\nstage: WIP\n:   You're coding or writing, actively working on it.\n\n\nstage: RTR\n:   You're finished, and want others to review the work and see if it is ready to be accepted and merged into BioJulia.\n\n\n\n\n\n\nThe BioJulia Pull Request review\n\n\nOnce the pull request enters the RTR (ready to review) stage, other members of the BioJulia organisation, will review the code and documentation in the pull request, and will assess it according to the \nBioJulia code and package guidelines\n.\n\n\nYour pull request will be accepted and merged if:\n\n\n\n\nTwo reviewers subsequently recommend the pull request for merging.\n\n\nThe automated build system confirms that all unit tests pass without failiure.", 
            "title": "Pull Requests"
        }, 
        {
            "location": "/policy/pull_requests/#contribute-by-pull-requests", 
            "text": "Conributions of code and documentation to existing BioJulia repositories take the form of pull requests (PR's).  Before you start to work on your fix or addition to a BioJulia repository we recommend that you make your pull request early. This allows better collaboration with others, exchange of ideas, more code contributions from others (taking the pressure off you!), and better overall code as a result.  The first thing all developers should do when making a PR is create themselves a fork of the BioJulia repository they want to contribute to, and then create a branch on that fork for the PR. This keeps the number of branches on the BioJulia repositories manageable and limited to release branches, and branches for major milestones involving work from many contributors. All developers, even those with push and pull access to BioJulia repositories, should follow this guidance.", 
            "title": "Contribute by pull requests"
        }, 
        {
            "location": "/policy/pull_requests/#the-biojulia-pull-request-lifecycle", 
            "text": "Pull Requests on BioJulia repositories go through several stages, and these stages are indicated by the following labels. Please use these labels to help let others know how far your are along with your work.   stage: planing :   You're planning. Figuring out the best way to code something or discussing ideas.  stage: WIP :   You're coding or writing, actively working on it.  stage: RTR :   You're finished, and want others to review the work and see if it is ready to be accepted and merged into BioJulia.", 
            "title": "The BioJulia Pull Request lifecycle"
        }, 
        {
            "location": "/policy/pull_requests/#the-biojulia-pull-request-review", 
            "text": "Once the pull request enters the RTR (ready to review) stage, other members of the BioJulia organisation, will review the code and documentation in the pull request, and will assess it according to the  BioJulia code and package guidelines .  Your pull request will be accepted and merged if:   Two reviewers subsequently recommend the pull request for merging.  The automated build system confirms that all unit tests pass without failiure.", 
            "title": "The BioJulia Pull Request review"
        }, 
        {
            "location": "/policy/off_boarding/", 
            "text": "The BioJulia off-boarding process\n\n\nThe BioJulia off-boarding process is designed to prevent security risks and confusion for the maintainers who are maintaining the BioJulia community at any given time.\n\n\nIt describes how maintainers (people in the BioJulia community with permissions and responsibility) are relieved of such a position if they find they are unable to fulfill the role, or who become inactive for a significant period of time.\n\n\n\n\nDefinition: an inactive maintainer\n\n\nWe define inactivity is defined as a noticeable lack of:\n\n\n\n\nCommits\n\n\nComments and resolution of Pull Requests\n\n\nA lack of activity on Gitter or other any such BioJulia forums.\n\n\n\n\nWithout any prior notification, for 2 months. Reduced activity during a period of 2 months does not constitute inactivity.\n\n\n\n\nThe off-boarding process\n\n\nThe off-boarding process of a member begins when:\n\n\n\n\nA maintainer opts to off-board.\n\n\nWhen an inactive member is brought to the attention of admin maintainers.\n\n\nAny maintainer consistently breaks community code of conduct, or any other    BioJulia guidelines. \nIn such a case off-boarding is a last resort, and is only done if the maintainer has    had multiple complaints and has not addressed their behaviour following being approached by admin.\n\n\n\n\nThe process proceeds as follows.\n\n\n\n\nThe admin open an issue at \nBioJulia/Organisation-Issues\n.\n\n\nIt it titled \"off-boarding notice: [NAME OF MAINTAINER]\".\n\n\nIt has a label \"off-boarding\" attached.\n\n\nIt should also state this off-boarding notice will be displayed without furthur action for a month.\n\n\nThe admin must also send an email to the maintainer in question notifying them that an off-boarding notice has been posted.    This email should explain the reason for the off-boarding notice: Whether it is because of inactivity, or due to repeated breaches of code of conduct.\n\n\nAs per guidance in step 1.4, the notice is open for a period of 1 month without subsequent action.\n\n\nDuring this time, the maintainer may reply and point out if they have actually been active, and if so where. They may also put forward a case if they feel they have not broken code of conduct.\n\n\nThey may also contact an admin privately if their absence has been due       to personal circumstances. In this case the admin must be sympathetic, and helpful to the individual, and must treat anything they are told as confidential. The admin must discuss with the individual what they want to happen, and how they (the admin) can help.\n\n\nAfter a month, if nothing is heard from the inactive maintainer:\n\n\nThey are removed from the maintainer's group.\n\n\nAdmin or write access to repositories they maintained\n\n\nThey are placed into the Member's group.\n\n\nThey are added to the Alumni group in recognition of their time spent as a maintainer.\n\n\nTheir role description will be changed on their member profile at \nbiojulia.github.io\n\n\n\n\nIf the member requests off-boarding for themselves, then step 1. still occurs, with the exception that a move to step 4. immediately occurs without the required 1 month notification period stipulated in point 4..\n\n\nThe most important point:\n \nIt is to be understood in every case, off-boarding does not constitute a rejection of the member from the group, and that off-boarding is completely reversible. We all have busy periods in our lives. A member may join, contribute, become inactive for a long period of time, before getting more time and holding their old maintainer position again - they are always welcome. Off-boarding is only in place in order to prevent unnessecery levels of permissions which could pose a security risk.", 
            "title": "Off-boarding"
        }, 
        {
            "location": "/policy/off_boarding/#the-biojulia-off-boarding-process", 
            "text": "The BioJulia off-boarding process is designed to prevent security risks and confusion for the maintainers who are maintaining the BioJulia community at any given time.  It describes how maintainers (people in the BioJulia community with permissions and responsibility) are relieved of such a position if they find they are unable to fulfill the role, or who become inactive for a significant period of time.", 
            "title": "The BioJulia off-boarding process"
        }, 
        {
            "location": "/policy/off_boarding/#definition-an-inactive-maintainer", 
            "text": "We define inactivity is defined as a noticeable lack of:   Commits  Comments and resolution of Pull Requests  A lack of activity on Gitter or other any such BioJulia forums.   Without any prior notification, for 2 months. Reduced activity during a period of 2 months does not constitute inactivity.", 
            "title": "Definition: an inactive maintainer"
        }, 
        {
            "location": "/policy/off_boarding/#the-off-boarding-process", 
            "text": "The off-boarding process of a member begins when:   A maintainer opts to off-board.  When an inactive member is brought to the attention of admin maintainers.  Any maintainer consistently breaks community code of conduct, or any other    BioJulia guidelines.  In such a case off-boarding is a last resort, and is only done if the maintainer has    had multiple complaints and has not addressed their behaviour following being approached by admin.   The process proceeds as follows.   The admin open an issue at  BioJulia/Organisation-Issues .  It it titled \"off-boarding notice: [NAME OF MAINTAINER]\".  It has a label \"off-boarding\" attached.  It should also state this off-boarding notice will be displayed without furthur action for a month.  The admin must also send an email to the maintainer in question notifying them that an off-boarding notice has been posted.    This email should explain the reason for the off-boarding notice: Whether it is because of inactivity, or due to repeated breaches of code of conduct.  As per guidance in step 1.4, the notice is open for a period of 1 month without subsequent action.  During this time, the maintainer may reply and point out if they have actually been active, and if so where. They may also put forward a case if they feel they have not broken code of conduct.  They may also contact an admin privately if their absence has been due       to personal circumstances. In this case the admin must be sympathetic, and helpful to the individual, and must treat anything they are told as confidential. The admin must discuss with the individual what they want to happen, and how they (the admin) can help.  After a month, if nothing is heard from the inactive maintainer:  They are removed from the maintainer's group.  Admin or write access to repositories they maintained  They are placed into the Member's group.  They are added to the Alumni group in recognition of their time spent as a maintainer.  Their role description will be changed on their member profile at  biojulia.github.io   If the member requests off-boarding for themselves, then step 1. still occurs, with the exception that a move to step 4. immediately occurs without the required 1 month notification period stipulated in point 4..  The most important point:   It is to be understood in every case, off-boarding does not constitute a rejection of the member from the group, and that off-boarding is completely reversible. We all have busy periods in our lives. A member may join, contribute, become inactive for a long period of time, before getting more time and holding their old maintainer position again - they are always welcome. Off-boarding is only in place in order to prevent unnessecery levels of permissions which could pose a security risk.", 
            "title": "The off-boarding process"
        }
    ]
}